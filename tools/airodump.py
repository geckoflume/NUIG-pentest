#!/usr/bin/env python3
import csv
from subprocess import run, TimeoutExpired, DEVNULL, Popen

from tests import Test
from tools import util
from tools.target import Target


class Airodump:
    targets = []
    targets_wep = []
    targets_wpa = []
    targets_others = []

    def __init__(self):
        self.path = Test.tmp_path + "airodump"
        self.filename = self.path + "-01.csv"
        self.raw_csv = ''

    def _parse(self):
        with open(self.filename, "r") as csvfile:
            reader = csv.reader(csvfile, skipinitialspace=True)
            for row in reader:
                if len(row) == 0: continue
                if 'BSSID' in row[0]: continue
                if 'Station MAC' in row[0]: break
                t = Target(row)
                Airodump.targets.append(t)
                if t.encryption is 'WEP':
                    Airodump.targets_wep.append(t)
                elif t.encryption is 'WPA':
                    Airodump.targets_wpa.append(t)
                else:
                    Airodump.targets_others.append(t)

    def scan(self):
        try:
            proc = run(["airodump-ng", "-w", self.path, "-o", "csv", Test.interface.name], stdout=DEVNULL,
                       stderr=DEVNULL, timeout=10)
        except TimeoutExpired as e:
            with open(self.filename, "r", newline='') as csvfile:
                self.raw_csv = csvfile.read()
            self._parse()
            return 0

    def capture_iv(self, target):
        # Capturing IVs
        target.target_ivs_file = self.path + util.remove_colon(target.bssid)
        airodump_iv = Popen(
            ["airodump-ng", "--bssid", target.bssid, "-w", target.target_ivs_file, "-o", "pcap", "-c", target.channel,
             Test.interface.name], stdout=DEVNULL, stderr=DEVNULL)
        return airodump_iv
