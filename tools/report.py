#!/usr/bin/env python3
import html

from tests import Test
from tools import util
from tools.config import Config


class Report:
    reports = []
    wep_count = 0
    wpa_count = 0
    template_header = """<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>NUIG pentest</title>

    <link href="css/bootstrap.min.css" rel="stylesheet">
    <style>
        .sidebar {
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
        }

        .sidebar-sticky {
            position: relative;
            top: 0;
            height: calc(100vh - 48px);
            padding-top: 8px;
            overflow-x: hidden;
            overflow-y: auto; /* Scrollable contents if viewport is shorter than content. */
        }

        .sidebar-header {
            text-align: center;
        }
        
        .summary {
            margin-bottom: 10px;
        }
    </style>
</head>

<body>
<div class="container-fluid">
    <div class="row">"""

    template_footer = """
    </div>
</div>

<script src="js/jquery-3.3.1.min.js"></script>
<script>
    jQuery("a[class^=\\\"nav-link\\\"]").click(function (event) {
        var str = jQuery.trim($(this).text())
        str = str.substring(0, str.indexOf('\xa0'))
        $("a[class^=\\\"nav-link\\\"]").removeClass("active");
        $(this).addClass("active")
        if (str == "All") {
            $("h1").parent().parent().show();
        } else {
            $('h1:not(:contains(' + str + '))').parent().parent().hide();
            $('h1:contains(' + str + ')').parent().parent().show();
        }
    });
</script>
</body>
</html>
    """

    def report(self, file, title="", desc="", vulnerability="", exploit="", countermeasure="", results="", code=0):
        md_file = open(file, "w")
        md_file.write("# " + title + "\n")
        md_file.write(desc + "\n\n")
        md_file.write("## Vulnerability\n")
        md_file.write(vulnerability + "\n\n")
        md_file.write("## Exploit\n")
        md_file.write(exploit + "\n\n")
        md_file.write("## Countermeasure\n")
        md_file.write(countermeasure + "\n\n")
        md_file.write("## Test results\n")
        md_file.write("```\n")
        md_file.write(results)
        md_file.write("```\n")
        if code is 0:
            md_file.write("**" + title + " complete!**\n\n")
        else:
            md_file.write("**" + title + " failed!**\n\n")
        md_file.write("---\n")
        md_file.close()

    def add_test(self, title="", desc="", vulnerability="", exploit="", countermeasure="", results="", code=0):
        Report.reports.append(ReportModel(title, desc, vulnerability, exploit, countermeasure, results, code))

    def generate(self):
        self.out = ''
        self.out += Report.template_header
        self.generate_nav()
        self.generate_tests()
        self.out += Report.template_footer
        with open(Test.results_path + Config.results_file, 'w') as results:
            results.write(self.out)

    def generate_nav(self):
        self.out += """
        <nav class="col-md-2 d-none d-md-block bg-light sidebar">
            <div class="sidebar-sticky">
                <div class="sidebar-header">
                    <h3>NUIG pentest</h3>
                </div>
                <div class="nav flex-column list-group summary">
                    <a class="nav-link list-group-item list-group-item-action d-flex justify-content-between 
                    align-items-center" href="#">
                        Summary&nbsp
                        <span class="badge badge-primary badge-pill">?</span>
                    </a>
                </div>
                <div class="nav flex-column list-group">
                    <a class="nav-link list-group-item list-group-item-action d-flex justify-content-between 
                    align-items-center" href="#">
                        All&nbsp
                        <span class="badge badge-primary badge-pill">?</span>
                    </a>
                    """
        for rep in Report.reports:
            self.out += """<a class="nav-link list-group-item list-group-item-action d-flex justify-content-between 
            align-items-center" href="#">
                    """ + rep.title + "&nbsp" + '<span class="badge badge-'
            if rep.code is 0:
                self.out += "success"
            else:
                self.out += "danger"
            self.out += ' badge-pill">'
            if rep.code is 0:
                self.out += "✓"
            else:
                self.out += "✗"
            self.out += """</span>
                </a>
                """

        self.out += """
                </div>
            </div>
        </nav>
        """

    def generate_tests(self):
        for rep in Report.reports:
            self.out += """<main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 
            border-bottom">
                <h1>"""
            self.out += rep.title
            self.out += """</h1>
            </div>
            <p>"""
            self.out += util.markdown_link_to_html(rep.desc)
            self.out += """</p>

            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 
            border-bottom">
                <h2>Vulnerability</h2>
            </div>
            <p>"""
            self.out += util.markdown_link_to_html(rep.vulnerability)
            self.out += """</p>

            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 
            border-bottom">
                <h2>Exploit</h2>
            </div>
            <p>"""
            self.out += util.markdown_link_to_html(rep.exploit)
            self.out += """</p>

            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 
            border-bottom">
                <h2>Countermeasure</h2>
            </div>
            <p>"""
            self.out += util.markdown_link_to_html(rep.countermeasure)
            self.out += """</p>

            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 
            border-bottom">
                <h2>Test results</h2>
            </div>
            <pre><code>"""
            self.out += html.escape(rep.results)
            self.out += """</code></pre>

            <div class="alert alert-"""
            if rep.code is 0:
                self.out += """success" role="alert">
                <b>""" + rep.title + " complete!"
            else:
                self.out += """danger" role="alert">
                <b>""" + rep.title + " failed!"
            self.out += """</b>
            </div>
        </main>"""


class ReportModel:
    def __init__(self, title="", desc="", vulnerability="", exploit="", countermeasure="", results="", code=0):
        self.title = title
        self.desc = desc
        self.vulnerability = vulnerability
        self.exploit = exploit
        self.countermeasure = countermeasure
        self.results = results
        self.code = code
