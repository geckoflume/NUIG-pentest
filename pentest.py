#!/usr/bin/env python3
# coding=utf-8
from getopt import getopt, GetoptError
from os import makedirs, listdir, path, remove
from os.path import dirname, realpath
from shutil import copytree
from sys import argv

from tests import *
from tools import leds
from tools.aircrack import Aircrack
from tools.aireplay import Aireplay
from tools.airmon import Airmon
from tools.airodump import Airodump
from tools.config import Config
from tools.report import Report
from tools.update import Update

logo = """
             ███▄    █  █    ██  ██▓  ▄████                  
             ██ ▀█   █  ██  ▓██▒▓██▒ ██▒ ▀█▒                 
            ▓██  ▀█ ██▒▓██  ▒██░▒██▒▒██░▄▄▄░                 
            ▓██▒  ▐▌██▒▓▓█  ░██░░██░░▓█  ██▓                 
            ▒██░   ▓██░▒▒█████▓ ░██░░▒▓███▀▒                 
            ░ ▒░   ▒ ▒ ░▒▓▒ ▒ ▒ ░▓   ░▒   ▒                  
            ░ ░░   ░ ▒░░░▒░ ░ ░  ▒ ░  ░   ░                  
               ░   ░ ░  ░░░ ░ ░  ▒ ░░ ░   ░                  
                     ░    ░      ░        ░                  
 ██▓███  ▓█████  ███▄    █ ▄▄▄█████▓▓█████   ██████ ▄▄▄█████▓
▓██░  ██▒▓█   ▀  ██ ▀█   █ ▓  ██▒ ▓▒▓█   ▀ ▒██    ▒ ▓  ██▒ ▓▒
▓██░ ██▓▒▒███   ▓██  ▀█ ██▒▒ ▓██░ ▒░▒███   ░ ▓██▄   ▒ ▓██░ ▒░
▒██▄█▓▒ ▒▒▓█  ▄ ▓██▒  ▐▌██▒░ ▓██▓ ░ ▒▓█  ▄   ▒   ██▒░ ▓██▓ ░ 
▒██▒ ░  ░░▒████▒▒██░   ▓██░  ▒██▒ ░ ░▒████▒▒██████▒▒  ▒██▒ ░ 
▒▓▒░ ░  ░░░ ▒░ ░░ ▒░   ▒ ▒   ▒ ░░   ░░ ▒░ ░▒ ▒▓▒ ▒ ░  ▒ ░░   
░▒ ░      ░ ░  ░░ ░░   ░ ▒░    ░     ░ ░  ░░ ░▒  ░ ░    ░    
░░          ░      ░   ░ ░   ░         ░   ░  ░  ░    ░      
            ░  ░         ░             ░  ░      ░           
"""

update = Update()


def _setup():
    leds.led_mode("green", "heartbeat")
    print(logo)
    Config("config.ini")
    Test.interface.check()
    Test.airmon = Airmon()
    Test.aircrack = Aircrack()
    Test.airodump = Airodump()
    Test.aireplay = Aireplay()
    Test.report = Report()
    try:
        makedirs(Test.results_path)
        makedirs(Test.tmp_path)
    except FileExistsError:
        pass
    if Test.interface.exists:
        Ip()
    else:
        print("\033[0;31mInterface " + Test.interface.name + " does not exist! Is it in monitor mode?")
        _clean()


def _run_all():
    if Test.interface.is_wireless:
        WifiScan()
        HiddenSsid()
        # Wep()
    if Test.interface.has_ip:
        Cdp()
        DynamicRouting()
        Fhrp()
        NbtScan()
        Nmap()
        Ping()
        PublicIp()
        Traceroute()
    else:
        print("No IP address, end of tests!")


def generate_report():
    Test.report.generate()
    copytree(dirname(realpath(__file__)) + "/report_files/css/", Test.results_path + "css/")
    copytree(dirname(realpath(__file__)) + "/report_files/js/", Test.results_path + "js/")


def _clean():
    for file in listdir(dirname(realpath(__file__))):
        if "replay_arp" in file and path.isfile(file):
            remove(file)
    leds.led_mode("red", "off")
    leds.led_mode("green", "default-on")
    exit()


def bad_syntax():
    print('usage: pentest.py [-u ssid]')
    _clean()


def main(argv):
    _setup()
    try:
        opts, args = getopt(argv, "hu:", ["update="])
    except GetoptError:
        bad_syntax()
    for opt, arg in opts:
        if opt == '-h':
            bad_syntax()
        elif opt in ("-u", "--update"):
            if arg == "ssid":
                update.update_ssid()
                _clean()
            else:
                bad_syntax()
    _run_all()
    generate_report()
    _clean()


if __name__ == "__main__":
    main(argv[1:])
