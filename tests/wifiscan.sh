#!/bin/bash

if [[ $# -ne 2 ]]; then
        echo "Syntax : $0 testname interface"
        exit 1
fi

./switch_led.sh on
filename=$1/$(basename -- $0 .sh).md

echo '# Wireless network scanning' > $filename
echo 'The board will listen for wireless beacons that advertise the presence of wireless networks. Please Note: The board has a 2.4Ghz radio and will detect 802.11b/g/n wireless networks.' >> $filename
echo >> $filename
echo '## Vulnerability' >> $filename
echo 'This scan yields important information relating wireless networks detected in the target environment. The board will detail the security settings associated with each wireless network that is detected.' >> $filename
echo >> $filename
echo '## Exploit' >> $filename
echo 'A user could use the scan results to perform all kinds of attacks against the wireless infrastructure. For example, if the board detects the presence of an SSID using PSK (Pre Shared Key) security, the board can be used to try and crack the PSK which would allow the board to decrypt wireless user traffic.' >> $filename
echo >> $filename
echo '## Countermeasure' >> $filename
echo 'One way to prevent this scan from detecting your wireless networks is to disable beacons on your SSIDs. However, there are other methods to detect SSIDs such as listening to wireless probe requests/responses. A wireless network using WPA2 EAP-TLS authentication with rogue access-point detection, provides a high level of wireless security.' >> $filename
echo >> $filename
echo '## Test results' >> $filename
echo '```' >> $filename

ifconfig $2 down &>> $filename
sleep 3
iwconfig $2 mode Managed &>> $filename
ifconfig $2 up &>> $filename
sleep 3
iwlist $2 scan | grep -v 'Unknown\|tsf\|Master\|completed' | cut -c11- &>> $filename
status=$?

echo '```' >> $filename
if [[ $status = 0 ]]; then
        echo '**Wireless network scan complete!**' >> $filename
else
        echo '**Wireless network scan NOT complete!**' >> $filename
fi
echo >> $filename
echo '---' >> $filename

./switch_led.sh off
exit $status

