#!/usr/bin/env python3
from os.path import splitext, basename
from subprocess import run, TimeoutExpired, PIPE, STDOUT

from tests.test import Test

title = 'Verify ICMP connectivity to the Internet (ICMP pings)'
desc = 'The board will try to ping [www.google.com](http://www.google.com). This will ascertain if the firewall ' \
       'permits ICMP pings to the Internet.'
vulnerability = 'If ICMP (ping) traffic is permitted, the user could leverage this "security hole" to launch ' \
                'additional attacks.'
exploit = 'The user can send IP traffic hidden inside an ICMP tunnel. The firewall will only see ICMP traffic and ' \
          'the user can launch all kinds of attacks which the firewall has no visibility of.'
countermeasure = 'ICMP pings are commonly used to troubleshoot connectivity to the Internet. It is advisable to ' \
                 'configure the firewall to ONLY permit ICMP pings from pre-defined devices, for example devices ' \
                 'used by the IT team. This facilitates troubleshooting by the IT team, whilst denying everyone else ' \
                 'ICMP access to the Internet.'


class Ping(Test):
    def __init__(self):
        Test.__init__(self)
        self.title = title
        self.desc = desc
        self.vulnerability = vulnerability
        self.exploit = exploit
        self.countermeasure = countermeasure
        self.filename = splitext(basename(__file__))[0] + ".md"
        self.run()

    def run(self):
        try:
            proc = run(["ping", "-I", Test.interface.name, "-c 4", "google.com"], stdout=PIPE, stderr=STDOUT,
                       timeout=120)
        except TimeoutExpired as e:
            self.results = e.stdout.decode()
            self.code = 1
        else:
            self.results = proc.stdout.decode()
            self.code = proc.returncode

        self.build_report()
        self.end()
