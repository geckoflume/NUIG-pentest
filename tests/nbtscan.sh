#!/bin/bash

if [[ $# -ne 2 ]]; then
        echo "Syntax : $0 testname interface"
	exit 1
fi

./switch_led.sh on
filename=$1/$(basename -- $0 .sh).md
network=$(ipcalc -nb $(nmcli dev show $2 | grep IP4.ADDRESS | awk '{print $NF}') | grep Network | awk '{print $NF}')

echo '# NBTScan (NetBIOS scan)' > $filename
echo "The NBTScan software can scan IP networks for Microsoft Windows NetBIOS name information. The board will implement an NBTScan against the board local subnet ($2) - $network." >> $filename
echo >> $filename
echo '## Vulnerability' >> $filename
echo 'This scan yields important information related to users/devices and is the first step in finding open file shares.' >> $filename
echo >> $filename
echo '## Exploit' >> $filename
echo 'A user could use the scan results to view open file shares that contain sensitive information. In addition, the user can use the scan results to target specific users and/or devices in later attacks. For example, if a specific employee is a target, the scan results usually indicate the userâ€™s name. This allows the user to carry out direct attacks against that specific employee.' >> $filename
echo >> $filename
echo '## Countermeasure' >> $filename
echo 'The best way to prevent NBTScan within the network is to use IEEE 802.1x port authentication. It is also considered good practise to routinely scan the network and shut down any open file shares and educating users about the risks of using open file shares.' >> $filename
echo >> $filename
echo '## Test results' >> $filename
echo '```' >> $filename

#-v verbose output
#-r use local port 137 for scans (Win95 boxes respond to this only)
#-r human-readable names for services
nbtscan -vrh $network &>> $filename
status=$?

echo '```' >> $filename
if [[ $status = 0 ]]; then
	echo '**NBTScan complete!**' >> $filename
else
	echo '**NBTScan NOT complete!**' >> $filename
fi
echo >> $filename
echo '---' >> $filename

./switch_led.sh off
exit $status
