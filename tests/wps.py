#!/usr/bin/env python3
from os.path import splitext, basename

from tests.test import Test
from tools.airodump import Airodump
from tools.report import Report

title = 'WPS Pixie Dust attack'
desc = 'WPS (Wi-Fi Protected Setup) is a major insecurity for wireless networks. The board will try to run the ' \
       'Reaver and Pixiewps tools to test if the access point is vulnerable. If it is, it will discover the WPA key ' \
       'for this AP, using the [Pixie Dust attack](' \
       'https://en.wikipedia.org/wiki/Wi-Fi_Protected_Setup#Offline_brute-force_attack)'
vulnerability = 'This attack works only for the default WPS implementation of several wireless chip makers, ' \
                'including Ralink, MediaTek, Realtek and Broadcom. The attack focuses on a lack of randomization ' \
                'when generating the E-S1 and E-S2 "secret" nonces. Knowing these two nonces, the PIN can be ' \
                'recovered within a couple of minutes.'
exploit = 'Knowing the key to the network, a user could use the results to perform all kinds of attacks against the ' \
          'wireless infrastructure. For example, it would allow the board to decrypt wireless user traffic.'
countermeasure = 'In order to prevent this attack from getting your WPS pin (and WPA passphrase), you need to ' \
                 'disable WPS on your access point. If it is not possible on your router models, you should replace it.'


class Wps(Test):
    def __init__(self):
        Test.__init__(self)
        self.title = title
        self.desc = desc
        self.vulnerability = vulnerability
        self.exploit = exploit
        self.countermeasure = countermeasure
        self.filename = splitext(basename(__file__))[0] + ".md"
        self.pre_run()
        self.run()

    def run(self):
        # Monitor mode
        Test.airmon.monitor()

        # Extracting
        self.code = 1
        if Report.wps_count < 1:
            self.results += "\nNo networks with WPS enabled!\n"
        else:
            for t in Airodump.targets:
                if t.encryption is 'WPA':
                    if t.wps:
                        self.results += t.essid + " (" + t.bssid + ")" + " Pixie Dust attack:\n"
                        res = Test.reaver.attack_pixie(t)
                        self.results += res + '\n\n'
                        self.code = Test.reaver.parse(res)
                        if self.code is 0:
                            self.score += 1

        # Station/managed mode
        Test.airmon.station()

        self.build_report()
        self.end()
