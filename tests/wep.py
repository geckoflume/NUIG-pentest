#!/usr/bin/env python3
from os.path import splitext, basename
from subprocess import run, DEVNULL

from tests.test import Test
from tools.airodump import Airodump
from tools.report import Report

title = 'WEP crack'
desc = 'The board will try (3 attempts) to crack all detected WEP networks and discover the password.'
vulnerability = 'This attack shows WEP\'s major weakness, the use of static encryption keys.'
exploit = 'A user could use the results to perform all kinds of attacks against the wireless infrastructure. ' \
          'For example, it would allow the board to decrypt wireless user traffic.'
countermeasure = 'One way to prevent this attack from cracking your wireless password is to use stronger data ' \
                 'encryption such as WPA2 authentication, or to remove the access point from the network.'


class Wep(Test):
    def __init__(self):
        run(["pkill", "air*"], stdout=DEVNULL, stderr=DEVNULL)
        Test.__init__(self)
        self.title = title
        self.desc = desc
        self.vulnerability = vulnerability
        self.exploit = exploit
        self.countermeasure = countermeasure
        self.filename = splitext(basename(__file__))[0] + ".md"
        self.pre_run()
        self.run()

    def run(self):
        # Monitor mode
        Test.airmon.monitor()

        # Extracting
        if Report.wep_count < 1:
            self.results += "\nNo WEP networks!\n"
            self.code = 1
        else:
            for t in Airodump.targets:
                if t.encryption is 'WEP':
                    count = 1
                    self.code = Test.aircrack.auto_crack_wep(t)
                    while self.code is not 0 and count is not 3:
                        count += 1
                        self.code = Test.aircrack.auto_crack_wep(t)
                    # Logging
                    self.results += t.essid + " = " + t.key + " (" + str(count) + " attempt(s))\n"

        # Station/managed mode
        Test.airmon.station()

        self.build_report()
        self.end()
