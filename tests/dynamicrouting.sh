#!/bin/bash

if [[ $# -ne 1 ]]; then
	echo "Syntax : $0 testname"
	exit 1
fi

./switch_led.sh on
filename=$1/$(basename -- $0 .sh).md
interface=wlan1

echo '# Dynamic routing protocol snooping' > $filename
echo 'The board will listen, capture and display dynamic routing protocol messages. This test supports OSPF (Open Shortest Path First), EIGRP (Enhanced Interior Gateway Routing Protocol) and RIP (Routing Information Protocol) which are commonly used dynamic routing protocols used within enterprises. The test will run for 60 seconds based on default routing protocol timers.' >> $filename
echo >> $filename
echo '## Vulnerability' >> $filename
echo 'The presence of dynamic routing protocols creates an opportunity for the user to implement dynamic routing protocol related attacks.' >> $filename
echo >> $filename
echo '## Exploit' >> $filename
echo 'Is is possible to use a routing protocol software (such as "Quagga"). It allows to participate in dynamic routing protocols such as OSPF, RIP and BGPand can be used to manipulate the routing tables on adjacent routers, ensuring traffic is routed to it. Once this is achieved, the user can launch a DoS (Denial of Service) attack by black-holing all traffic it receives or it can perform a MITM (Man In The Middle) attack, whereby user traffic is routed across it (the board is a transit router and seeâ€™s all user traffic).' >> $filename
echo >> $filename
echo '## Countermeasure' >> $filename
echo 'All dynamic routing protocols support authentication and this should be enabled for security reasons. If a dynamic routing protocol message is received that has not been encrypted with the same authentication key, the message is discarded. Configuring authentication for routing protocol messages will prevent the board from implementing this exploit.' >> $filename
echo >> $filename
echo '## Test results' >> $filename
echo '```' >> $filename

if ifconfig $interface &> /dev/null; then #interface exists
	if iwconfig $interface &> /dev/null && [[ -z $(iwconfig $interface | grep 'ESSID:\"') ]]; then #interface is wireless and is not connected
		echo "Wireless interface $interface is not connected!" >> $filename
		status=1
	else
		#-vvv very verbose output
		#-i $interface specifies the interface to use
		#proto ospf or eigrp or udp port 520 capture only OSPF, EIGRP or RIP (port 520) packets
		tcpdump -vvv -i $interface proto ospf or eigrp or udp port 520 &>> $filename & PID=$!
		#default hello timer for default routing protocol is 60 seconds so this should capture all announcements
		sleep 60
		kill $PID &> /dev/null
		wait $PID
		status=$?
	fi
else
	echo "Interface $interface does not exist!" >> $filename
	status=1
fi

echo '```' >> $filename
if [[ $status = 0 ]]; then
	echo '**Dynamic routing protocol snooping complete!**' >> $filename
else
	echo '**Dynamic routing protocol NOT complete!**' >> $filename
fi
echo >> $filename
echo '---' >> $filename

./switch_led.sh off
exit $status

